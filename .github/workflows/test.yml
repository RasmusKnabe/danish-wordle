name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting (if available)
      run: npm run lint || echo "No lint script available"
      continue-on-error: true

    - name: Run unit tests
      run: npm test -- --testPathPattern=tests/unit

    - name: Run integration tests
      run: npm test -- --testPathPattern=tests/integration

    - name: Run frontend tests
      run: npm test -- --testPathPattern=tests/frontend

    - name: Run all tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test production build
      run: |
        # Start server in background
        npm start &
        SERVER_PID=$!
        
        # Wait for server to be ready
        sleep 5
        
        # Test server is responsive
        curl -f http://localhost:3000/health || exit 1
        
        # Test frontend is served
        curl -f http://localhost:3000/ || exit 1
        
        # Kill server
        kill $SERVER_PID

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for known vulnerabilities
      run: npm audit --production